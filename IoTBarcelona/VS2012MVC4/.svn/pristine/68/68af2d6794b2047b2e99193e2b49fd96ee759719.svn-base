using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.Data.Entity;
using System.Linq;
using System.Web;
using Controllers.General;
using System.Data.Entity.ModelConfiguration.Conventions;

namespace Barcelona.Models
{
    public class MediaFileModels
    {
    }

    public class attachFile
    {
        [Key]
        public Int64 fileId { get; set; }

        [Display(Name = "File Path")]
        public string filePath { get; set; }
        public string fileName { get; set; }
        public string fID { get; set; }
        public DateTime cdt { get; set; }
        public DateTime udt { get; set; }
        public string editor { get; set; }
        public int Length { get; set; }
        public string Type { get; set; }
        public string folderId { get; set; }
        public string displayname { get; set; }
        public string Version { get; set; }
    }

    public class AttachFileVerSet
    {
        private DBContext db = new DBContext();

        public List<attachFile> GetFiles(string fID, string State)
        {
            string strState = State.ToString();
            var att = db.attachFiles.Where(x => x.fID == fID && x.folderId == strState).ToList();
            return att;
        }
    }

    public class DBContext : DbContext
    {
        public DBContext()
            : base("DBContext")
        {

        }

        public DbSet<sysErrorMessage> sysErrorMessages { get; set; }
        public DbSet<attachFile> attachFiles { get; set; }
        public DbSet<Roles> role { get; set; }
        public DbSet<UsersInRoles> usersinroles { get; set; }
        public DbSet<Applications> application { get; set; }
        public DbSet<attachFileTable> attachFileTables { get; set; }
        public DbSet<EventVision> EventVision { get; set; }
        public DbSet<EventHealthin> EventHealthin { get; set; }
        public DbSet<CustMailMessage> custmailmessage { get; set; }
        public DbSet<vUser> vuser { get; set; }

        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            modelBuilder.Conventions.Remove<PluralizingTableNameConvention>();
        }
    }

    public class sysErrorMessage
    {
        [Key]
        public Int32 ID { get; set; }
        public string SourceFunction { get; set; }
        public string ContentMessage { get; set; }
        public string editor { get; set; }
        public DateTime cdt { get; set; }
    }

    public class sysErrorMessageDBSet
    {
        private DBContext db = new DBContext();
        private sysErrorMessage mSysErrorMessage = new sysErrorMessage();

        public sysErrorMessageDBSet()
        {

        }

        public void InitErrorData(string Src, string content, string editor)
        {
            mSysErrorMessage.SourceFunction = Src;
            mSysErrorMessage.ContentMessage = content;
            mSysErrorMessage.editor = editor;
            mSysErrorMessage.cdt = DateTime.Now;
            SetErrorData(mSysErrorMessage);
        }

        private void SetErrorData(sysErrorMessage syserror)
        {
            if (syserror != null)
            {
                db.sysErrorMessages.Add(syserror);
                db.SaveChanges();
            }
        }
    }
}