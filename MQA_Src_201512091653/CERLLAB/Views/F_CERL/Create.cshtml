@model CERLLAB.Models.f_cerl

@{
    string website = CERLLAB.Controllers.General.Constant.S_WebSite;
    string web = website + "/F_CERL/";
    string PartialFormAction = "PartialFormAction";
    ViewBag.Title = "Create";
}
<script type="text/javascript">
    $(document).ready(function () {
        $('#tabs').tabs();
    });

    $(function () {
        $("#Site").change(function () {
            var selectedItem = $(this).val();
            var ddlTestItem = $("#TestItem");
            var ddlRequestItem = $("#RequestItem");
            var ddlLabMember = $("#LabMember");
            ddlTestItem.html('');
            ddlRequestItem.html('');
            ddlLabMember.html('');
            $.ajax({
                cache: false,
                type: "GET",
                url: "@web" + "GetTestItemMenu",
                data: { root: selectedItem, iWhere: 1 },
                success: function (data) {
                    $.each(data, function (i, item) {
                        ddlTestItem.append($('<option/>', {
                            value: item.Id,
                            text: item.Name
                        }));
                    });

                    $("#TestItem").change();
                },
                error: function (xhr, ajaxOptions, thrownError) {
                    alert('Failed to retrieve test item menu.');
                }
            });
        });
    });

    $(function () {
        $("#TestItem").change(function () {
            var selectedItem = $(this).val();
            var ddlRequestItem = $("#RequestItem");
            var ddlLocalSupervisor = $("#LocalSupervisor");
            var ddlLabMember = $("#LabMember");

            ddlRequestItem.html('');
            ddlLocalSupervisor.html('');
            ddlLabMember.html('');

            $.ajax({
                cache: false,
                type: "GET",
                url: "@web" + "GetTestItemMenu",
                data: { root: selectedItem, iWhere: 0 },
                success: function (data) {
                    $.each(data, function (i, item) {
                        ddlRequestItem.append($('<option/>', {
                            value: item.Id,
                            text: item.Name
                        }));
                    });
                },
                error: function (xhr, ajaxOptions, thrownError) {
                    alert('Failed to retrieve test item menu.');
                }
            });

            $.ajax({
                cache: false,
                type: "GET",
                url: "@web" + "GetLocalSupervisor",
                data: { root: selectedItem },
                success: function (data) {
                    $.each(data, function (i, item) {
                        ddlLocalSupervisor.append($('<option/>', {
                            value: item.Id,
                            text: item.Name
                        }));
                    });
                },
                error: function (xhr, ajaxOptions, thrownError) {
                    alert('Failed to retrieve LocalSupervisor item menu.');
                }
            });

            $.ajax({
                cache: false,
                type: "GET",
                url: "@web" + "GetLabMember",
                data: { root: selectedItem },
                success: function (data) {
                    $.each(data, function (i, item) {
                        ddlLabMember.append($('<option/>', {
                            value: item.Id,
                            text: item.Name
                        }));
                    });
                },
                error: function (xhr, ajaxOptions, thrownError) {
                    alert('Failed to retrieve LabMember item menu.');
                }
            });

            $.ajax({
                cache: false,
                type: "GET",
                url: "@web" + "GetDivShow",
                data: { root: selectedItem },
                success: function (data) {
                    var IdvShowArray = data.split("|");
                    if (IdvShowArray.indexOf("EFA") != -1) {
                        $("#EFA").show();

                        var ddlReturnType = $("#ReturnType");
                        ddlReturnType.change();
                    }
                    else {
                        $("#EFA").hide();
                    }

                    if (IdvShowArray.indexOf("Descr") != -1) {
                        $("#Descr").show();
                    }
                    else {
                        $("#Descr").hide();
                    }

                    if (IdvShowArray.indexOf("Source") != -1) {
                        $("#Source").show();
                    }
                    else {
                        $("#Source").hide();
                    }

                    if (IdvShowArray.indexOf("FA") != -1) {
                        $("#FA").show();
                    }
                    else {
                        $("#FA").hide();
                    }

                    if (IdvShowArray.indexOf("Strain") != -1) {
                        $("#Strain").show();
                    }
                    else {
                        $("#Strain").hide();
                    }
                },
                error: function (xhr, ajaxOptions, thrownError) {
                    alert('Failed to retrieve DivShow item menu.');
                }
            });

        });
    });

    $(function () {
        $("#ReturnType").change(function () {
            var selectedItem = $(this).val();
            var ddlFailureSite = $("#FailureSite");
            ddlFailureSite.html('');
            $.ajax({
                cache: false,
                type: "GET",
                url: "@web" + "GetReturnSite",
                data: { iWhere: selectedItem },
                success: function (data) {
                    $.each(data, function (i, item) {
                        ddlFailureSite.append($('<option/>', {
                            value: item.Id,
                            text: item.Name
                        }));
                    });
                },
                error: function (xhr, ajaxOptions, thrownError) {
                    alert('Failed to retrieve ReturnSite item menu.');
                }
            });
        });

        $("#CustomerID").change(function () {
            var selectedItem = $(this).val();
            var ddlProductStage = $("#ProductStageID");
            ddlProductStage.html('');
            $.ajax({
                cache: false,
                type: "GET",
                url: "@web" + "GetProductStage",
                data: { iWhere: selectedItem },
                success: function (data) {
                    $.each(data, function (i, item) {
                        ddlProductStage.append($('<option/>', {
                            value: item.Id,
                            text: item.Name
                        }));
                    });
                },
                error: function (xhr, ajaxOptions, thrownError) {
                    alert('Failed to retrieve ProductStage item menu.');
                }
            });
        });
    });
</script>

<div id="tabs">
    <ul>
        <li><a href="#tabs-1">申請單</a></li>
        <li><a href="#tabs-2">@Html.LabelFor(model => model.Comment)</a></li>
    </ul>
    @using (Html.BeginForm(null, null, FormMethod.Post, new { enctype = "multipart/form-data", name = "fcerl", id = "fcerl" }))
    {
        @Html.AntiForgeryToken()
        @Html.ValidationSummary(true)
        <div id="tabs-1">
            @if (ViewData["FormAction"] != null)
            {
                @Html.Partial(PartialFormAction, ViewData["FormAction"])
            }
            <fieldset>
                <legend>f_cerl</legend>
                <div id="DivUserRequestInformation">
                    <table class="jtable" style="table-layout: fixed;">
                        <tr>
                            <th class="editor-label" width="15%">
                                @Html.LabelFor(model => model.Site)
                            </th>
                            <td class="editor-field" width="35%">
                                @Html.DropDownListFor(model => model.Site, (SelectList)ViewData["siteList"])
                                @Html.ValidationMessageFor(model => model.Site)
                            </td>
                            <th class="editor-label" width="15%">
                                @Html.LabelFor(model => model.TestItem)
                            </th>
                            <td class="editor-field" width="35%">
                                @Html.DropDownListFor(model => model.TestItem, (SelectList)ViewData["testList"])
                                @Html.ValidationMessageFor(model => model.TestItem)
                            </td>
                        </tr>
                        <tr>
                            <th class="editor-label" width="15%">
                                @Html.LabelFor(model => model.RequestItem)
                            </th>
                            <td class="editor-field" width="35%">
                                @Html.DropDownListFor(model => model.RequestItem, (SelectList)ViewData["requestList"])
                                @Html.ValidationMessageFor(model => model.RequestItem)
                            </td>
                            <td class="editor-label" width="15%">
                            </td>
                            <td class="editor-field" width="35%"></td>
                        </tr>
                    </table>
                    <table class="jtable" style="table-layout: fixed;">
                        <tr>
                            <th class="editor-label" width="15%">
                                @Html.LabelFor(model => model.CustomerID)
                            </th>
                            <td class="editor-field" width="35%">
                                @Html.DropDownListFor(model => model.CustomerID, (SelectList)ViewData["CustomerNameList"])
                                @Html.ValidationMessageFor(model => model.CustomerID)
                            </td>
                            <th class="editor-label" width="15%">
                                @Html.LabelFor(model => model.ProjectName)
                            </th>
                            <td class="editor-field" width="35%">
                                @Html.EditorFor(model => model.ProjectName)
                                @Html.ValidationMessageFor(model => model.ProjectName)
                            </td>
                        </tr>
                        <tr>
                            <th class="editor-label" width="15%">
                                @Html.LabelFor(model => model.PartNumber)
                            </th>
                            <td class="editor-field" width="35%">
                                @Html.TextAreaFor(model => model.PartNumber, new { cols = 14, @rows = 3, style = "width: 95%" })
                                @Html.ValidationMessageFor(model => model.PartNumber)
                            </td>
                            <th class="editor-label" width="15%">
                                @Html.LabelFor(model => model.SerialNumber)
                            </th>
                            <td class="editor-field" width="35%">
                                @Html.TextAreaFor(model => model.SerialNumber, new { cols = 14, @rows = 3, style = "width: 95%" })
                                @Html.ValidationMessageFor(model => model.SerialNumber)
                            </td>
                        </tr>
                        <tr>
                            <th class="editor-label" width="15%">
                                @Html.LabelFor(model => model.PCBVendorID)
                            </th>
                            <td class="editor-field" width="35%">
                                @Html.DropDownListFor(model => model.PCBVendorID, (SelectList)ViewData["PCBVendor"])
                                @Html.ValidationMessageFor(model => model.PCBVendorID)
                            </td>
                            <th class="editor-label" width="15%">
                                @Html.LabelFor(model => model.ProductStageID)
                            </th>
                            <td class="editor-field" width="35%">
                                @Html.DropDownListFor(model => model.ProductStageID, (SelectList)ViewData["ProductStage"])
                                @Html.ValidationMessageFor(model => model.ProductStageID)
                            </td>
                        </tr>
                    </table>
                    
                </div>

                <div id="EFA" style="display:none">
                    <table class="jtable" style="table-layout: fixed;">
                        <tr>
                            <th class="editor-label" width="15%">
                                @Html.LabelFor(model => model.ReturnType)
                            </th>
                            <td class="editor-field" width="35%">
                                @Html.DropDownListFor(model => model.ReturnType, (SelectList)ViewData["ReturnTypeList"])
                                @Html.ValidationMessageFor(model => model.ReturnType)
                            </td>
                            <th class="editor-label" width="15%">
                                @Html.LabelFor(model => model.FailureSite)
                            </th>
                            <td class="editor-field" width="35%">
                                @Html.DropDownListFor(model => model.FailureSite, (SelectList)ViewData["FailureSiteList"])
                                @Html.ValidationMessageFor(model => model.FailureSite)
                            </td>
                        </tr>
                    </table>
                </div>

                <div id="Descr">
                    <table class="jtable" style="table-layout: fixed;">
                        <tr>
                            <th class="editor-label" width="15%">
                                @Html.LabelFor(model => model.BackgroundDesc)
                            </th>
                            <td class="editor-field" width="85%">
                                @Html.TextAreaFor(model => model.BackgroundDesc, new { cols = 14, @rows = 3, style = "width: 98%" })
                                @Html.ValidationMessageFor(model => model.BackgroundDesc)
                            </td>
                        </tr>
                    </table>
                </div>

                <div id="Source">
                    <table class="jtable" style="table-layout: fixed;">
                        <tr>
                            <th class="editor-label" width="15%">
                                @Html.LabelFor(model => model.IssueSource)
                            </th>
                            <td class="editor-field" width="35%">
                                @Html.DropDownListFor(model => model.IssueSource, (SelectList)ViewData["IssueSourceList"])
                                @Html.ValidationMessageFor(model => model.IssueSource)
                            </td>
                            <td width="15%"></td>
                            <td width="35%"></td>
                        </tr>
                    </table>
                </div>

                <div id="FA">
                    <table class="jtable" style="table-layout: fixed;">
                        <tr>
                            <th class="editor-label" width="15%">
                                @Html.LabelFor(model => model.SampleQty)
                            </th>
                            <td class="editor-field" width="35%">
                                @Html.EditorFor(model => model.SampleQty, new { })
                                @Html.ValidationMessageFor(model => model.SampleQty)
                            </td>
                            <td width="15%"></td>
                            <td width="35%"></td>
                        </tr>
                    </table>
                </div>

                <div id="Strain" style="display:none">
                    <table class="jtable" style="table-layout: fixed;">
                        <tr>
                            <th class="editor-label" width="15%">
                                @Html.LabelFor(model => model.TestPurpose)
                            </th>
                            <td class="editor-field" width="35%">
                                @Html.DropDownListFor(model => model.TestPurpose, (SelectList)ViewData["TestPurposeList"])
                                @Html.ValidationMessageFor(model => model.TestPurpose)
                            </td>
                            <th class="editor-label" width="15%">
                                @Html.LabelFor(model => model.FixtureSupplier)
                            </th>
                            <td class="editor-field" width="35%">
                                @Html.EditorFor(model => model.FixtureSupplier)
                                @Html.ValidationMessageFor(model => model.FixtureSupplier)
                            </td>
                        </tr>
                        <tr>
                            <th class="editor-label" width="15%">
                                @Html.LabelFor(model => model.ProductStage)
                            </th>
                            <td class="editor-field" width="35%">
                                @Html.EditorFor(model => model.ProductStage)
                                @Html.ValidationMessageFor(model => model.ProductStage)
                            </td>
                            <th class="editor-label" width="15%">
                                @Html.LabelFor(model => model.ProcessStep)
                            </th>
                            <td class="editor-field" width="35%">
                                @Html.DropDownListFor(model => model.ProcessStep, (SelectList)ViewData["ProcessStepList"])
                                @Html.ValidationMessageFor(model => model.ProcessStep)
                            </td>
                            
                        </tr>
                        <tr>
                            <th class="editor-label" width="15%">
                                @Html.LabelFor(model => model.FixtureNo)
                            </th>
                            <td class="editor-field" width="35%">
                                @Html.EditorFor(model => model.FixtureNo)
                                @Html.ValidationMessageFor(model => model.FixtureNo)
                            </td>
                            <th class="editor-label" width="15%">
                                @Html.LabelFor(model => model.FixtureVersionNo)
                            </th>
                            <td class="editor-field" width="35%">
                                @Html.EditorFor(model => model.FixtureVersionNo)
                                @Html.ValidationMessageFor(model => model.FixtureVersionNo)
                            </td>
                        </tr>
                    </table>
                </div>

                <div id="DivUserAttachFile">
                    <table class="jtable" style="table-layout: fixed;">
                        <tr>
                            <th class="editor-label" width="15%">
                                File Upload:
                            </th>
                            <td class="editor-field" width="85%">
                                <input id="uploadfile" name="uploadfile[]" class="multi" type="file" multiple="multiple" />
                                <input id="upfileAction" name="upfileAction" type="button" value="Upload" onclick="document.getElementById('Action').value = 'D'; document.getElementById('fcerl').submit();" />
                            </td>
                        </tr>
                    </table>
                </div>

                <div id="DivLAB" style="display:none;">
                    <table class="jtable" style="table-layout: fixed;">
                        <tr>
                            <th class="editor-label" width="15%">
                                @Html.LabelFor(model => model.Supervisor)
                            </th>
                            <td class="editor-field" width="35%">
                                @Html.DropDownListFor(model => model.Supervisor, (SelectList)ViewData["SupervisorList"])
                                @Html.ValidationMessageFor(model => model.Supervisor)
                            </td>
                            <th class="editor-label" width="15%">
                                @Html.LabelFor(model => model.LocalSupervisor)
                            </th>
                            <td class="editor-field" width="35%">
                                @Html.DropDownListFor(model => model.LocalSupervisor, (SelectList)ViewData["LocalSupervisorList"])
                                @Html.ValidationMessageFor(model => model.LocalSupervisor)
                            </td>
                        </tr>
                        <tr>
                            <th class="editor-label" width="15%">
                                @Html.LabelFor(model => model.LabMember)
                            </th>
                            <td class="editor-field" width="35%">
                                @Html.DropDownListFor(model => model.LabMember, (SelectList)ViewData["LabMemberList"])
                                @Html.ValidationMessageFor(model => model.LabMember)
                            </td>
                            <th class="editor-label" width="15%">
                                @Html.LabelFor(model => model.ReceiptQty)
                            </th>
                            <td class="editor-field" width="35%">
                                @Html.EditorFor(model => model.ReceiptQty)
                                @Html.ValidationMessageFor(model => model.ReceiptQty)
                            </td>
                        </tr>
                        <tr>
                            <th class="editor-label" width="15%">
                                @Html.LabelFor(model => model.ReceiptDate)
                            </th>
                            <td class="editor-field" width="35%">
                                @Html.EditorFor(model => model.ReceiptDate)
                                @Html.ValidationMessageFor(model => model.ReceiptDate)
                            </td>
                            <th class="editor-label" width="15%">
                                @Html.LabelFor(model => model.FinishDate)
                            </th>
                            <td class="editor-field" width="35%">
                                @Html.EditorFor(model => model.FinishDate)
                                @Html.ValidationMessageFor(model => model.FinishDate)
                            </td>
                        </tr>
                        <tr>
                            <th class="editor-label" width="15%">
                                @Html.LabelFor(model => model.AnalysisResult)
                            </th>
                            <td class="editor-field" width="35%">
                                @Html.TextAreaFor(model => model.AnalysisResult, new { cols = 10, @rows = 3, style = "width: 95%" })
                                @Html.ValidationMessageFor(model => model.AnalysisResult)
                            </td>
                            <th class="editor-label" width="15%">
                                @Html.LabelFor(model => model.AnalysisSummary)
                            </th>
                            <td class="editor-field" width="35%;">
                                @Html.TextAreaFor(model => model.AnalysisSummary, new { cols = 10, @rows = 3, style = "width: 95%" })
                                @Html.ValidationMessageFor(model => model.AnalysisSummary)
                            </td>
                        </tr>
                        <tr>
                            <th class="editor-label" width="15%">
                                @Html.LabelFor(model => model.NextTestDate)
                            </th>
                            <td class="editor-field" width="85%" colspan="3">
                                @Html.EditorFor(model => model.NextTestDate)
                                @*@Html.ValidationMessageFor(model => model.NextTestDate)*@
                            </td>
                        </tr>
                    </table>
                </div>
            </fieldset>
        </div>
        <div id="tabs-2">
            <table class="jtable" style="width:90%">
                <tr>
                    <td class="editor-field">
                        @Html.TextAreaFor(model => model.Comment, new { cols = 35, @rows = 10, style = "width: 98%" })
                        @Html.ValidationMessageFor(model => model.Comment)
                    </td>
                </tr>
            </table>
        </div>
    }
</div>
<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
